<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Nas', 'doctrine');

/**
 * BaseNas
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $nasname
 * @property string $shortname
 * @property string $type
 * @property integer $ports
 * @property string $secret
 * @property string $community
 * @property string $description
 * @property integer $id_isporg
 * @property inet $pacc_nasipaddress
 * @property string $pacc_conn_user
 * @property string $pacc_conn_pass
 * @property string $pacc_admin_user
 * @property string $pacc_admin_pass
 * @property integer $id_ispsuborg
 * @property string $pacc_macaddress
 * @property string $pacc_ssid
 * @property string $pacc_radlocation
 * @property integer $pacc_adminport
 * @property AccIsporg $AccIsporg
 * @property AccIspsuborg $AccIspsuborg
 * 
 * @method integer      getId()                Returns the current record's "id" value
 * @method string       getNasname()           Returns the current record's "nasname" value
 * @method string       getShortname()         Returns the current record's "shortname" value
 * @method string       getType()              Returns the current record's "type" value
 * @method integer      getPorts()             Returns the current record's "ports" value
 * @method string       getSecret()            Returns the current record's "secret" value
 * @method string       getCommunity()         Returns the current record's "community" value
 * @method string       getDescription()       Returns the current record's "description" value
 * @method integer      getIdIsporg()          Returns the current record's "id_isporg" value
 * @method inet         getPaccNasipaddress()  Returns the current record's "pacc_nasipaddress" value
 * @method string       getPaccConnUser()      Returns the current record's "pacc_conn_user" value
 * @method string       getPaccConnPass()      Returns the current record's "pacc_conn_pass" value
 * @method string       getPaccAdminUser()     Returns the current record's "pacc_admin_user" value
 * @method string       getPaccAdminPass()     Returns the current record's "pacc_admin_pass" value
 * @method integer      getIdIspsuborg()       Returns the current record's "id_ispsuborg" value
 * @method string       getPaccMacaddress()    Returns the current record's "pacc_macaddress" value
 * @method string       getPaccSsid()          Returns the current record's "pacc_ssid" value
 * @method string       getPaccRadlocation()   Returns the current record's "pacc_radlocation" value
 * @method integer      getPaccAdminport()     Returns the current record's "pacc_adminport" value
 * @method AccIsporg    getAccIsporg()         Returns the current record's "AccIsporg" value
 * @method AccIspsuborg getAccIspsuborg()      Returns the current record's "AccIspsuborg" value
 * @method Nas          setId()                Sets the current record's "id" value
 * @method Nas          setNasname()           Sets the current record's "nasname" value
 * @method Nas          setShortname()         Sets the current record's "shortname" value
 * @method Nas          setType()              Sets the current record's "type" value
 * @method Nas          setPorts()             Sets the current record's "ports" value
 * @method Nas          setSecret()            Sets the current record's "secret" value
 * @method Nas          setCommunity()         Sets the current record's "community" value
 * @method Nas          setDescription()       Sets the current record's "description" value
 * @method Nas          setIdIsporg()          Sets the current record's "id_isporg" value
 * @method Nas          setPaccNasipaddress()  Sets the current record's "pacc_nasipaddress" value
 * @method Nas          setPaccConnUser()      Sets the current record's "pacc_conn_user" value
 * @method Nas          setPaccConnPass()      Sets the current record's "pacc_conn_pass" value
 * @method Nas          setPaccAdminUser()     Sets the current record's "pacc_admin_user" value
 * @method Nas          setPaccAdminPass()     Sets the current record's "pacc_admin_pass" value
 * @method Nas          setIdIspsuborg()       Sets the current record's "id_ispsuborg" value
 * @method Nas          setPaccMacaddress()    Sets the current record's "pacc_macaddress" value
 * @method Nas          setPaccSsid()          Sets the current record's "pacc_ssid" value
 * @method Nas          setPaccRadlocation()   Sets the current record's "pacc_radlocation" value
 * @method Nas          setPaccAdminport()     Sets the current record's "pacc_adminport" value
 * @method Nas          setAccIsporg()         Sets the current record's "AccIsporg" value
 * @method Nas          setAccIspsuborg()      Sets the current record's "AccIspsuborg" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseNas extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('nas');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'nas_id',
             'length' => 4,
             ));
        $this->hasColumn('nasname', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('shortname', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('type', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => 'other',
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('ports', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('secret', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('community', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id_isporg', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('pacc_nasipaddress', 'inet', null, array(
             'type' => 'inet',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('pacc_conn_user', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('pacc_conn_pass', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('pacc_admin_user', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('pacc_admin_pass', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id_ispsuborg', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('pacc_macaddress', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('pacc_ssid', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('pacc_radlocation', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('pacc_adminport', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('AccIsporg', array(
             'local' => 'id_isporg',
             'foreign' => 'id'));

        $this->hasOne('AccIspsuborg', array(
             'local' => 'id_ispsuborg',
             'foreign' => 'id'));
    }
}