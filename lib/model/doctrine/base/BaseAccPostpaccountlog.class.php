<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AccPostpaccountlog', 'doctrine');

/**
 * BaseAccPostpaccountlog
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_postpaccount
 * @property timestamp $srvstarttime
 * @property timestamp $srvstoptime
 * @property integer $timespent
 * @property integer $trafficspent
 * @property integer $id_systemuser
 * @property string $s_bill
 * @property string $accountinfo
 * @property integer $id_usagedefinition
 * @property AccPostpaccount $AccPostpaccount
 * @property AccSystemuser $AccSystemuser
 * @property AccUsagedefinition $AccUsagedefinition
 * 
 * @method integer            getId()                 Returns the current record's "id" value
 * @method integer            getIdPostpaccount()     Returns the current record's "id_postpaccount" value
 * @method timestamp          getSrvstarttime()       Returns the current record's "srvstarttime" value
 * @method timestamp          getSrvstoptime()        Returns the current record's "srvstoptime" value
 * @method integer            getTimespent()          Returns the current record's "timespent" value
 * @method integer            getTrafficspent()       Returns the current record's "trafficspent" value
 * @method integer            getIdSystemuser()       Returns the current record's "id_systemuser" value
 * @method string             getSBill()              Returns the current record's "s_bill" value
 * @method string             getAccountinfo()        Returns the current record's "accountinfo" value
 * @method integer            getIdUsagedefinition()  Returns the current record's "id_usagedefinition" value
 * @method AccPostpaccount    getAccPostpaccount()    Returns the current record's "AccPostpaccount" value
 * @method AccSystemuser      getAccSystemuser()      Returns the current record's "AccSystemuser" value
 * @method AccUsagedefinition getAccUsagedefinition() Returns the current record's "AccUsagedefinition" value
 * @method AccPostpaccountlog setId()                 Sets the current record's "id" value
 * @method AccPostpaccountlog setIdPostpaccount()     Sets the current record's "id_postpaccount" value
 * @method AccPostpaccountlog setSrvstarttime()       Sets the current record's "srvstarttime" value
 * @method AccPostpaccountlog setSrvstoptime()        Sets the current record's "srvstoptime" value
 * @method AccPostpaccountlog setTimespent()          Sets the current record's "timespent" value
 * @method AccPostpaccountlog setTrafficspent()       Sets the current record's "trafficspent" value
 * @method AccPostpaccountlog setIdSystemuser()       Sets the current record's "id_systemuser" value
 * @method AccPostpaccountlog setSBill()              Sets the current record's "s_bill" value
 * @method AccPostpaccountlog setAccountinfo()        Sets the current record's "accountinfo" value
 * @method AccPostpaccountlog setIdUsagedefinition()  Sets the current record's "id_usagedefinition" value
 * @method AccPostpaccountlog setAccPostpaccount()    Sets the current record's "AccPostpaccount" value
 * @method AccPostpaccountlog setAccSystemuser()      Sets the current record's "AccSystemuser" value
 * @method AccPostpaccountlog setAccUsagedefinition() Sets the current record's "AccUsagedefinition" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAccPostpaccountlog extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('acc_postpaccountlog');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'acc_postpaccountlog_id',
             'length' => 4,
             ));
        $this->hasColumn('id_postpaccount', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('srvstarttime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('srvstoptime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('timespent', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'default' => '0',
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('trafficspent', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'default' => '0',
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('id_systemuser', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('s_bill', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('accountinfo', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id_usagedefinition', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('AccPostpaccount', array(
             'local' => 'id_postpaccount',
             'foreign' => 'id'));

        $this->hasOne('AccSystemuser', array(
             'local' => 'id_systemuser',
             'foreign' => 'id'));

        $this->hasOne('AccUsagedefinition', array(
             'local' => 'id_usagedefinition',
             'foreign' => 'id'));
    }
}