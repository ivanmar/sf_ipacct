sql {
	database = "postgresql"
	driver = "rlm_sql_${database}"
	server = "localhost"
	login = "postgres"
	password = "11hack11"
	radius_db = "ipacct_radius"
	acct_table1 = "radacct"
	acct_table2 = "radacct"
	postauth_table = "radpostauth"
	authcheck_table = "radcheck"
	authreply_table = "radreply"
	groupcheck_table = "radgroupcheck"
	groupreply_table = "radgroupreply"
	usergroup_table = "radusergroup"
	read_groups = yes
	deletestalesessions = yes
	sqltrace = no
	sqltracefile = ${logdir}/sqltrace.sql
	num_sql_socks = 9
	connect_failure_retry_delay = 20
	readclients = yes
	nas_table = "nas"


sql_user_name = "%{User-Name}"
nas_query = "SELECT id, nasname, shortname, type, secret FROM ${nas_table}"

authorize_check_query = "SELECT id, UserName, Attr, Value, Op \
  FROM ${authcheck_table} \
  WHERE Username = '%{SQL-User-Name}' \
  ORDER BY id"

authorize_reply_query = "SELECT id, UserName, Attr, Value, Op \
  FROM ${authreply_table} \
  WHERE Username = '%{SQL-User-Name}' \
  ORDER BY id"

authorize_group_check_query = "SELECT id, GroupName, Attr, Value, op \
  FROM ${groupcheck_table} \
  WHERE GroupName = '%{Sql-Group}' \
  ORDER BY id"

authorize_group_reply_query = "SELECT id, GroupName, Attr, Value, op \
  FROM ${groupreply_table} \
  WHERE GroupName = '%{Sql-Group}' \
  ORDER BY id"

simul_count_query = "SELECT COUNT(*) FROM ${acct_table1} WHERE UserName='%{SQL-User-Name}' AND AcctStopTime IS NULL"
simul_verify_query = "SELECT RadAcctId, AcctSessionId, UserName, NASIPAddress, NASPortId, FramedIPAddress, CallingStationId, FramedProtocol FROM ${acct_table1} WHERE UserName='%{SQL-User-Name}' AND AcctStopTime IS NULL"


accounting_onoff_query = "UPDATE ${acct_table1} \
  SET AcctStopTime = ('%S'::timestamp - '%{%{Acct-Delay-Time}:-0}'::interval), \
  AcctSessionTime = (EXTRACT(EPOCH FROM ('%S'::timestamp - AcctStartTime::timestamp \
  - '%{%{Acct-Delay-Time}:-0}'::interval)))::BIGINT, \
  AcctTerminateCause = '%{Acct-Terminate-Cause}', \
  AcctStopDelay = 0 \
  WHERE AcctStopTime IS NULL \
  AND NASIPAddress= '%{NAS-IP-Address}' \
  AND AcctStartTime <= '%S'::timestamp"

accounting_update_query = "UPDATE ${acct_table1} \
  SET FramedIPAddress = NULLIF('%{Framed-IP-Address}', '')::inet, \
  AcctSessionTime = '%{Acct-Session-Time}', \
  AcctInputOctets = (('%{%{Acct-Input-Gigawords}:-0}'::bigint << 32) + '%{%{Acct-Input-Octets}:-0}'::bigint), \
  AcctOutputOctets = (('%{%{Acct-Output-Gigawords}:-0}'::bigint << 32) + '%{%{Acct-Output-Octets}:-0}'::bigint) \
  WHERE AcctSessionId = '%{Acct-Session-Id}' AND UserName = '%{SQL-User-Name}' \
  AND NASIPAddress= '%{NAS-IP-Address}' AND AcctStopTime IS NULL"

accounting_update_query_alt = "INSERT INTO ${acct_table1} \
  (AcctSessionId, AcctUniqueId, UserName, Realm, NASIPAddress, \
  NASPortId, NASPortType, AcctStartTime, \
  AcctSessionTime, AcctAuthentic, AcctInputOctets, \
  AcctOutputOctets, CalledStationId, CallingStationId, \
  ServiceType, FramedProtocol, FramedIPAddress, XAscendSessionSvrKey) \
  VALUES('%{Acct-Session-Id}', '%{Acct-Unique-Session-Id}', \
  '%{SQL-User-Name}', NULLIF('%{Realm}', ''), '%{NAS-IP-Address}', \
  %{%{NAS-Port}:-NULL}::integer, '%{NAS-Port-Type}', \
  ('%S'::timestamp - '%{%{Acct-Delay-Time}:-0}'::interval - '%{%{Acct-Session-Time}:-0}'::interval), \
  '%{Acct-Session-Time}', '%{Acct-Authentic}', \
  (('%{%{Acct-Input-Gigawords}:-0}'::bigint << 32) + '%{%{Acct-Input-Octets}:-0}'::bigint), \
  (('%{%{Acct-Output-Gigawords}:-0}'::bigint << 32) + '%{%{Acct-Output-Octets}:-0}'::bigint), \
  '%{Called-Station-Id}', \
  '%{Calling-Station-Id}', '%{Service-Type}', '%{Framed-Protocol}', \
  NULLIF('%{Framed-IP-Address}', '')::inet, '%{X-Ascend-Session-Svr-Key}')"

accounting_start_query = "INSERT INTO ${acct_table1} \
  (AcctSessionId, AcctUniqueId, UserName, Realm, NASIPAddress, \
   NASPortId, NASPortType, AcctStartTime, AcctAuthentic, \
  ConnectInfo_start, CalledStationId, CallingStationId, ServiceType, \
  FramedProtocol, FramedIPAddress, AcctStartDelay, XAscendSessionSvrKey) \
  VALUES('%{Acct-Session-Id}', \
  '%{Acct-Unique-Session-Id}', \
  '%{SQL-User-Name}', \
  NULLIF('%{Realm}', ''), \
  '%{NAS-IP-Address}', \
  %{%{NAS-Port}:-NULL}::integer, \
  '%{NAS-Port-Type}', \
  ('%S'::timestamp - '%{%{Acct-Delay-Time}:-0}'::interval), \
  '%{Acct-Authentic}', \
  '%{Connect-Info}', \
  '%{Called-Station-Id}', \
  '%{Calling-Station-Id}', \
  '%{Service-Type}', \
  '%{Framed-Protocol}', \
  NULLIF('%{Framed-IP-Address}', '')::inet, \
  0, \
  '%{X-Ascend-Session-Svr-Key}')"

accounting_start_query_alt  = "UPDATE ${acct_table1} \
  SET AcctStartTime = ('%S'::timestamp - '%{%{Acct-Delay-Time}:-0}'::interval), \
  AcctStartDelay = 0, \
  ConnectInfo_start = '%{Connect-Info}' \
  WHERE AcctSessionId = '%{Acct-Session-Id}' \
  AND UserName = '%{SQL-User-Name}' \
  AND NASIPAddress = '%{NAS-IP-Address}' \
  AND AcctStopTime IS NULL"

accounting_stop_query = "UPDATE ${acct_table2} \
  SET AcctStopTime = ('%S'::timestamp - '%{%{Acct-Delay-Time}:-0}'::interval), \
  AcctSessionTime = CASE WHEN '%{Acct-Session-Time}' = '' THEN \
  (EXTRACT(EPOCH FROM ('%S'::TIMESTAMP - AcctStartTime::TIMESTAMP \
  - '%{%{Acct-Delay-Time}:-0}'::INTERVAL)))::BIGINT ELSE '%{Acct-Session-Time}' END, \
  AcctInputOctets = (('%{%{Acct-Input-Gigawords}:-0}'::bigint << 32) + '%{%{Acct-Input-Octets}:-0}'::bigint), \
  AcctOutputOctets = (('%{%{Acct-Output-Gigawords}:-0}'::bigint << 32) + '%{%{Acct-Output-Octets}:-0}'::bigint), \
  AcctTerminateCause = '%{Acct-Terminate-Cause}', \
  AcctStopDelay = 0, \
  FramedIPAddress = NULLIF('%{Framed-IP-Address}', '')::inet, \
  ConnectInfo_stop = '%{Connect-Info}' \
  WHERE AcctSessionId = '%{Acct-Session-Id}' \
  AND UserName = '%{SQL-User-Name}' \
  AND NASIPAddress = '%{NAS-IP-Address}' \
  AND AcctStopTime IS NULL"

accounting_stop_query_alt = "INSERT INTO ${acct_table2} \
  (AcctSessionId, AcctUniqueId, UserName, Realm, NASIPAddress, NASPortId, NASPortType, AcctStartTime, AcctStopTime, \
  AcctSessionTime, AcctAuthentic, ConnectInfo_stop, AcctInputOctets, AcctOutputOctets, CalledStationId, \
  CallingStationId, AcctTerminateCause, ServiceType, FramedProtocol, FramedIPAddress, AcctStopDelay) \
  values('%{Acct-Session-Id}', \
  '%{Acct-Unique-Session-Id}', \
  '%{SQL-User-Name}', \
  NULLIF('%{Realm}', ''), \
  '%{NAS-IP-Address}', \
  %{%{NAS-Port}:-NULL}::integer, \
  '%{NAS-Port-Type}', \
  ('%S'::timestamp - '%{%{Acct-Delay-Time}:-0}'::interval - '%{%{Acct-Session-Time}:-0}'::interval), \
  ('%S'::timestamp - '%{%{Acct-Delay-Time}:-0}'::interval), \
  NULLIF('%{Acct-Session-Time}', '')::bigint, '%{Acct-Authentic}', \
  '%{Connect-Info}', \
  (('%{%{Acct-Input-Gigawords}:-0}'::bigint << 32) + '%{%{Acct-Input-Octets}:-0}'::bigint), \
  (('%{%{Acct-Output-Gigawords}:-0}'::bigint << 32) + '%{%{Acct-Output-Octets}:-0}'::bigint), \
  '%{Called-Station-Id}', \
  '%{Calling-Station-Id}', \
  '%{Acct-Terminate-Cause}', \
  '%{Service-Type}', \
  '%{Framed-Protocol}', \
  NULLIF('%{Framed-IP-Address}', '')::inet, 0)"


group_membership_query = "SELECT GroupName FROM ${usergroup_table} WHERE UserName='%{SQL-User-Name}' ORDER BY priority"

postauth_query = "INSERT INTO ${postauth_table} (username, pass, reply, authdate) \
  VALUES ('%{User-Name}', '%{%{User-Password}:-Chap-Password}', '%{reply:Packet-Type}', NOW())"

	
}

